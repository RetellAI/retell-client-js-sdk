var t=require("retell-sdk");function e(t,e){try{var n=t()}catch(t){return e(t)}return n&&n.then?n.then(void 0,e):n}exports.RetellClientSdk=/*#__PURE__*/function(){function n(){this.liveClient=null,this.audioContext=null,this.isCalling=!1,this.stream=null,this.captureNode=null,this.audioData=[],this.audioDataIndex=0,this.eventListeners={onConversationStarted:[],onConversationEnded:[],onError:[]}}var i=n.prototype;return i.startConversation=function(n){var i=n.callId,o=n.sampleRate,r=void 0===o?22050:o,a=n.customStream,s=void 0===a?null:a;try{var u=this,l=e(function(){return Promise.resolve(u.setupAudio(r,s)).then(function(){u.liveClient=new t.AudioWsClient(i),u.handleAudioEvents(),u.isCalling=!0,u.audioContext.resume(),u.triggerEvent("onConversationStarted")})},function(t){u.triggerEvent("onError",t.message)});return Promise.resolve(l&&l.then?l.then(function(){}):void 0)}catch(t){return Promise.reject(t)}},i.stopConversation=function(){var t,e,n;this.isCalling=!1,null==(t=this.liveClient)||t.close(),null==(e=this.audioContext)||e.suspend(),this.captureNode&&(this.captureNode.disconnect(),this.captureNode.onaudioprocess=null),this.audioContext&&this.audioContext.close(),null==(n=this.stream)||n.getTracks().forEach(function(t){return t.stop()}),this.liveClient=null,this.audioContext=null,this.stream=null,this.captureNode=null,this.audioData=[],this.audioDataIndex=0,this.triggerEvent("onConversationEnded")},i.on=function(t,e){this.eventListeners[t]&&this.eventListeners[t].push(e)},i.setupAudio=function(n,i){void 0===i&&(i=null);try{var o=function(e){var n=r.audioContext.createMediaStreamSource(r.stream);r.captureNode=r.audioContext.createScriptProcessor(2048,1,1),r.captureNode.onaudioprocess=function(e){if(r.isCalling){var n=e.inputBuffer.getChannelData(0),i=t.convertFloat32ToUint8(n);r.liveClient.send(i);for(var o=e.outputBuffer.getChannelData(0),a=0;a<o.length;++a)r.audioData.length>0?(o[a]=r.audioData[0][r.audioDataIndex++],r.audioDataIndex===r.audioData[0].length&&(r.audioData.shift(),r.audioDataIndex=0)):o[a]=0}},n.connect(r.captureNode),r.captureNode.connect(r.audioContext.destination)},r=this;r.audioContext=new AudioContext({sampleRate:n});var a=e(function(){function t(t){r.stream=t}return i?t(i):Promise.resolve(navigator.mediaDevices.getUserMedia({audio:{sampleRate:n,echoCancellation:!0,noiseSuppression:!0,channelCount:1}})).then(t)},function(){throw new Error("User didn't give microphone permission")});return Promise.resolve(a&&a.then?a.then(o):o())}catch(t){return Promise.reject(t)}},i.handleAudioEvents=function(){var e=this;this.liveClient.on("audio",function(n){var i=t.convertUint8ToFloat32(n);e.audioData.push(i)}),this.liveClient.on("error",function(t){e.triggerEvent("onError",t),e.stopConversation()}),this.liveClient.on("close",function(t,n){e.stopConversation(),e.triggerEvent("onConversationEnded",{code:t,reason:n})})},i.triggerEvent=function(t,e){this.eventListeners[t]&&this.eventListeners[t].forEach(function(t){return t(e)})},n}();
