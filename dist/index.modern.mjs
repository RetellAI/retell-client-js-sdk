import{EventEmitter as t}from"eventemitter3";import{Room as e,RoomEvent as i,Track as o,RemoteAudioTrack as a}from"livekit-client";const n=new TextDecoder;class s extends t{constructor(){super(),this.room=void 0,this.connected=!1,this.audioContext=void 0,this.sampleRate=void 0,this.isAgentTalking=!1,this.audioAnalyzerNode=void 0,this.captureAudioFrame=void 0}getNewAudioContext(t){if("undefined"!=typeof window&&(window.AudioContext||window.webkitAudioContext))return new AudioContext({latencyHint:"interactive",sampleRate:t.sampleRate})}async startCall(t){try{const i=this.getNewAudioContext(t);if(null==i)throw new Error("AudioContext not supported");if(this.audioContext=i,"suspended"===this.audioContext.state)try{await this.audioContext.resume()}catch(t){throw console.warn("Could not resume audio context",{error:t}),new Error("AudioContext cannot be resumed")}this.sampleRate=this.audioContext.sampleRate,this.room=new e({audioCaptureDefaults:{autoGainControl:!0,echoCancellation:!0,noiseSuppression:!0,channelCount:1,deviceId:t.captureDeviceId,sampleRate:t.sampleRate},audioOutput:{deviceId:t.playbackDeviceId},webAudioMix:{audioContext:this.audioContext}}),this.handleRoomEvents(),t.emitRawAudioSamples&&(this.audioAnalyzerNode=this.audioContext.createAnalyser(),this.audioAnalyzerNode.fftSize=2048),this.handleAudioEvents(t),this.handleDataEvents(),await this.room.connect("wss://retell-ai-4ihahnq7.livekit.cloud",t.accessToken),console.log("connected to room",this.room.name),this.room.localParticipant.setMicrophoneEnabled(!0),this.connected=!0,this.emit("call_started"),t.emitRawAudioSamples&&(this.captureAudioFrame=window.requestAnimationFrame(()=>this.captureAudioSamples()))}catch(t){this.emit("error","Error starting call"),console.error("Error starting call",t),this.stopCall()}}async startAudioPlayback(){await this.room.startAudio()}stopCall(){var t;this.connected&&(this.connected=!1,this.emit("call_ended"),null==(t=this.room)||t.disconnect()),this.isAgentTalking=!1,delete this.room,delete this.sampleRate,this.audioAnalyzerNode&&(this.audioAnalyzerNode.disconnect(),delete this.audioAnalyzerNode),this.audioContext&&(this.audioContext.close(),delete this.audioContext),this.captureAudioFrame&&(window.cancelAnimationFrame(this.captureAudioFrame),delete this.captureAudioFrame)}mute(){this.connected&&this.room.localParticipant.setMicrophoneEnabled(!1)}unmute(){this.connected&&this.room.localParticipant.setMicrophoneEnabled(!0)}captureAudioSamples(){if(!this.connected||!this.audioAnalyzerNode)return;let t=new Float32Array(this.audioAnalyzerNode.fftSize);this.audioAnalyzerNode.getFloatTimeDomainData(t),this.emit("audio",t),this.captureAudioFrame=window.requestAnimationFrame(()=>this.captureAudioSamples())}handleRoomEvents(){this.room.on(i.ParticipantDisconnected,t=>{"server"===(null==t?void 0:t.identity)&&this.stopCall()}),this.room.on(i.Disconnected,()=>{this.connected&&this.stopCall()})}handleAudioEvents(t){this.room.on(i.TrackSubscribed,(e,i,n)=>{e.kind===o.Kind.Audio&&(e instanceof a&&t.emitRawAudioSamples&&e.setWebAudioPlugins([this.audioAnalyzerNode]),e.attach())})}handleDataEvents(){this.room.on(i.DataReceived,(t,e,i,o)=>{try{if("server"!==(null==e?void 0:e.identity))return;let i=n.decode(t),o=JSON.parse(i);"update"===o.event_type?this.emit("update",o):"metadata"===o.event_type?this.emit("metadata",o):"agent_start_talking"===o.event_type?(this.isAgentTalking=!0,this.emit("agent_start_talking")):"agent_stop_talking"===o.event_type&&(this.isAgentTalking=!1,this.emit("agent_stop_talking"))}catch(t){console.error("Error decoding data received",t)}})}}export{s as RetellWebClient};
